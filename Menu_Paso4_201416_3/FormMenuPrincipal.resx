<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="FormMenuPrincipalMenuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /APgD/AH4AAAB/AAAA/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>